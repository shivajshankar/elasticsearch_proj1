name: Deploy to K3s (Search Namespace)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > ~/.kube/config
          kubectl config use-context default-context
          
      - name: Create/Update Elasticsearch secret
        env:
          ELASTIC_PASSWORD: ${{ secrets.ELASTIC_PASSWORD }}
        run: |
          kubectl create secret generic elasticsearch-secrets \
            --namespace=search \
            --from-literal=ELASTIC_PASSWORD="$ELASTIC_PASSWORD" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Create/Update Kibana secret
        env:
          ELASTIC_PASSWORD: ${{ secrets.ELASTIC_PASSWORD }}
          KIBANA_SYSTEM_PASSWORD: ${{ secrets.KIBANA_SYSTEM_PASSWORD || secrets.ELASTIC_PASSWORD }}
          ENCRYPTION_KEY: ${{ secrets.KIBANA_ENCRYPTION_KEY || '' }}
        run: |
          # Use provided encryption key or generate a new one
          if [ -z "$ENCRYPTION_KEY" ]; then
            ENCRYPTION_KEY=$(openssl rand -hex 32)
            echo "##[warning] Generated new encryption key. Please add KIBANA_ENCRYPTION_KEY to GitHub Secrets for persistence"
          fi
          
          kubectl create secret generic kibana-secrets \
            --namespace=search \
            --from-literal=KIBANA_SYSTEM_PASSWORD="$KIBANA_SYSTEM_PASSWORD" \
            --from-literal=ENCRYPTION_KEY="$ENCRYPTION_KEY" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Applications
        run: |
          echo "Deploying applications to 'search' namespace..."
          kubectl apply -n search -f deploy/k8s/elasticsearch.yaml
          kubectl apply -n search -f deploy/k8s/kibana.yaml

      - name: Verify deployments
        run: |
          echo "Deployment status:"
          kubectl get pods -n search || echo "Could not verify deployment status. Continuing..."
          
          echo -e "\nService status:"
          kubectl get svc -n search
